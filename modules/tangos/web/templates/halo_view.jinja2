{% extends "layout.jinja2" %}

{% block content %}

    <div id="calculate_url" class="dynamic-update hidden">{{ calculate_url }}<!-- hidden element for javascript --></div>
    <div id="gather_url" class="dynamic-update hidden">{{ gather_url }}<!-- hidden element for javascript --></div>
    <div id="cascade_url" class="dynamic-update hidden">{{ cascade_url }}<!-- hidden element for javascript --></div>


    <h1 class="dynamic-update" id="halo-title">Halo {{ halo_number }} of {{ timestep }}</h1>


    <div class="keeponscreen dynamic-update" id="navigation">
        <p><span class="mono">dbid={{ this_id }}</span></p>
        <p>Find in a different timestep:
            {% for link, name in zip(time_links.urls, time_links.names) %}
                <a href="{{ link }}" class="ajaxenabled">{{ name }}</a>
            {% endfor %}
        </p>
        <p>
            Look at another halo:
            {% if halo_number>1 %}
               <a href="{{ gather_url }}{{ halo_number-1 }}" class="ajaxenabled">{{ halo_number-1 }}</a> |
            {% endif %} {{ halo_number }} |
            <a href="{{ gather_url }}{{ halo_number+1 }}" class="ajaxenabled">{{ halo_number+1 }}</a>
        </p>
        <p>
        <form id="select-othersimulation">
            <label for="target_sim_id">Find in another simulation:</label>
            <select name="target_sim_id" id="target_sim_id" onchange="findInOtherSimulation();">
                {% for sim in all_simulations %}
                    {% if sim.name==simulation %}
                        <option value="{{ sim.url }}" selected="selected">{{ sim.name }}</option>
                    {% else %}
                       <option value="{{ sim.url }}" >{{ sim.name }}</option>
                    {% endif %}
                {% endfor %}
            </select>
        </form>
        </p>

    </div>

    <div id="imgbox_container" class="keeponscreen">
        <div>
        <form id="image_form" onsubmit="fetchPlot(); return false;" onchange="fetchPlot();" class="autorestore">
            For: <input name="type" value="gather" type="radio" id="type-gather"><label for="type-gather">This timestep</label>
            <input name="type" value="cascade" type="radio" id="type-cascade" checked><label for="type-cascade">This halo</label>
        </form>
        </div>
        <div id="imgbox">Images appear here</div>
    </div>



    <h2>Properties</h2>


    <form id="properties_form" onsubmit="return false;" class="dynamic-update autorestore" onchange="fetchPlot();" >

    <table>
        <tr class="collapsibletable"><th>Plot</th><th>Property</th><th>Value</th></tr>
        <tr id="custom-row-1">
            <td id="plotctl-custom-row-1"></td><td id="nametg-custom-row-1" class="editable"></td><td id="contents-custom-row-1"></td>
        </tr>
        {%  for prop in properties %}
            <tr>
                {%  if prop.is_array %}
                    <td>Plot</td>
                {% else %}
                    <td><input  name="x" type="radio" value="{{ prop.name }}"/><input name="y" type="radio" value="{{ prop.name }}"/></td>
                {% endif %}
                <td>{{ prop.name }}</td><td>{{ prop.value }}</td>
            </tr>
        {%  endfor %}
    </table>

    </form>


    <script language="JavaScript">

        $.fn.markAsRowInsertPoint = function() {
            return $(this).makeEditableTemplate(addBlankRow, removeRow, updateRowData);
        }

        function updateRowData(miniLanguageQuery, rowId) {
            $('#nametg-'+rowId).html("<img src='/static/spinner.gif'/>"+miniLanguageQuery)

            // Plot controls need to be in DOM immediately, then removed later if they are not appropriate.
            // This is so that the correct radio buttons get ticked after a page update (otherwise the
            // update happens while the DOM elements are not yet available)
            $('#plotctl-'+rowId).html(getPlotControlElements(miniLanguageQuery));

            $.ajax({
                type: "GET",
                url: $('#calculate_url').text()+uriEncodeQuery(miniLanguageQuery)+".json",
                success: function (data) {
                    var selected_row = $('#'+rowId);
                    if(data.error) {
                        $('#nametg-'+rowId).html("<span class='load_table_failed'>"+miniLanguageQuery+"</span>")
                        // alert(data.error_class+": "+data.error);
                    } else {
                        $('#nametg-'+rowId).html(miniLanguageQuery);
                        $('#contents-'+rowId).html(data.data_formatted);

                        // See above for why the plot controls are put in place then removed
                        if(!data.can_use_in_plot)
                            $('#plotctl-'+rowId).html("");
                    }
                }
            });
        }

        function addBlankRow(after) {
            var new_name = "custom-row-"+Math.random().toString(36).substring(7);

            $('#'+after).after("<tr id='"+new_name+"'><td id='plotctl-"+new_name+"'></td><td class='editable' id='nametg-"+new_name+"'></td><td id='contents-"+new_name+"'></td>")
            $('#nametg-'+new_name).markAsRowInsertPoint();
            return new_name;
        }

        function removeRow(name) {
            $("#"+name).remove()
        }



        function findInOtherSimulation() {
            ajaxNavigate(document.forms['select-othersimulation']['target_sim_id'].value);
        }




        var objImg;

        function fetchPlot(isUpdate)
        {
            var formvals = $('#properties_form').values()
            var plotformvals = $('#image_form').values()
            var name1 = formvals['x'];
            var name2 = formvals['y'];
            if(name1===undefined || name2===undefined)
                return;
            var plotType = plotformvals['type']
            var uri;
            if(plotType==='gather')
                uri =$('#gather_url').text()+name1+"/vs/"+name2+".png";
            else if(plotType==='cascade')
                uri = $('#cascade_url').text()+
                    name1+"/vs/"+name2+".png";
            if(uri===undefined) {
                alert("Unknown plot type");
                return false;
            }
            loadImage(uri);
            if(isUpdate===undefined || isUpdate===false)
                $('#imgbox').empty().html("<img src='/static/spinner.gif' />&nbsp;Generating plot...");
            else
                $('#imgbox').append("<img src='/static/spinner.gif' />&nbsp;Updating...");
            return true;
        }

        function loadImage(url) {
            objImg = new Image();
            objImg.src = url;
            objImg.onload = placeImage;
            objImg.onerror = placeImageError;
        }

        function placeImageError() {
            errorlink = '<a href="'+objImg.src+'" target="_blank">';
            $('#imgbox').empty().html("<h2>Sorry, there was an error generating your plot.</h2><p>Click "+errorlink+"here</a> for more information (opens in a new window)");
        }

        function placeImage() {
            $('#imgbox').empty()
            $('#imgbox').append(objImg);
            $('#imgbox').css('width',objImg.width);
        }

        $('#nametg-custom-row-1').markAsRowInsertPoint();
        ajaxEnableLinks();

        $(function() {
            prePageUpdate(function() {
                persistEditables();
                persistFormStates();
            });

            postPageUpdate(function() {
                allEditables = [];
                $('#nametg-custom-row-1').markAsRowInsertPoint();
                restoreEditables();
                restoreFormStates();
                fetchPlot(true);
                ajaxEnableLinks();
            });

            fetchPlot();
        });



    </script>

{% endblock content %}
